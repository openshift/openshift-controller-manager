filesystem: "root"
mode: 0755
path: "/usr/local/bin/etcd-member-add.sh"
contents:
  inline: |
    #!/usr/bin/env bash
    
    # This script should be invoked only if the member already has valid certs.
    # example
    # sudo -E ./etcd-member-add.sh 192.168.1.100 $etcd_name
    
    if [[ $EUID -ne 0 ]]; then
      echo "This script must be run as root"
      exit 1
    fi
    
    usage () {
        echo 'Active server IP address and etcd name required: ./etcd-member-add.sh 192.168.1.100 $etcd_name'
        exit 1
    }
    
    if [ "$1" == "" ] || [ "$2" == "" ]; then
        usage
    fi
    
    RECOVERY_SERVER_IP=$1
    ETCD_NAME=$2
    
    ASSET_DIR=./assets
    CONFIG_FILE_DIR=/etc/kubernetes
    MANIFEST_DIR="${CONFIG_FILE_DIR}/manifests"
    RUN_ENV=/run/etcd/environment
    
    MANIFEST_STOPPED_DIR="$ASSET_DIR/manifests-stopped"
    ETCD_MANIFEST="${MANIFEST_DIR}/etcd-member.yaml"
    ETCD_CONFIG=$RUN_ENV
    ETCDCTL=$ASSET_DIR/bin/etcdctl
    ETCD_VERSION=v3.3.10
    ETCD_DATA_DIR=/var/lib/etcd
    ETCD_STATIC_RESOURCES="${CONFIG_FILE_DIR}/static-pod-resources/etcd-member"
    
    source "/usr/local/bin/openshift-recovery-tools"
    
    function run {
      init
      dl_etcdctl
      backup_manifest
      DISCOVERY_DOMAIN=$(grep -oP '(?<=discovery-srv=).*[^"]' $ASSET_DIR/backup/etcd-member.yaml )
      if [ -z "$DISCOVERY_DOMAIN" ]; then
        echo "Discovery domain can not be extracted from $ASSET_DIR/backup/etcd-member.yaml"
        exit 1
      fi
      validate_environment
      source  /run/etcd/environment
      backup_etcd_conf
      backup_etcd_client_certs
      stop_etcd
      backup_data_dir
      etcd_member_add
      start_etcd
    }
    
    run
