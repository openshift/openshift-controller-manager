filesystem: "root"
mode: 0644
path: "/etc/containers/storage.conf"
contents:
  inline: |
    # This file is generated by the Machine Config Operator's containerruntimeconfig controller.
    #
    # storage.conf is the configuration file for all tools
    # that share the containers/storage libraries
    # See man 5 containers-storage.conf for more information
    # The "container storage" table contains all of the server options.
    [storage]

    # Default Storage Driver
    driver = "overlay"

    # Temporary storage location
    runroot = "/var/run/containers/storage"

    # Primary Read/Write location of container storage
    graphroot = "/var/lib/containers/storage"

    [storage.options]
    # Storage options to be passed to underlying storage drivers

    # AdditionalImageStores is used to pass paths to additional Read/Only image stores
    # Must be comma separated list.
    additionalimagestores = [
    ]

    # Size is used to set a maximum size of the container image.  Only supported by
    # certain container storage drivers.
    size = ""

    # OverrideKernelCheck tells the driver to ignore kernel checks based on kernel version
    override_kernel_check = "true"

    # Remap-UIDs/GIDs is the mapping from UIDs/GIDs as they should appear inside of
    # a container, to UIDs/GIDs as they should appear outside of the container, and
    # the length of the range of UIDs/GIDs.  Additional mapped sets can be listed
    # and will be heeded by libraries, but there are limits to the number of
    # mappings which the kernel will allow when you later attempt to run a
    # container.
    #
    # remap-uids = 0:1668442479:65536
    # remap-gids = 0:1668442479:65536

    # Remap-User/Group is a name which can be used to look up one or more UID/GID
    # ranges in the /etc/subuid or /etc/subgid file.  Mappings are set up starting
    # with an in-container ID of 0 and the a host-level ID taken from the lowest
    # range that matches the specified name, and using the length of that range.
    # Additional ranges are then assigned, using the ranges which specify the
    # lowest host-level IDs first, to the lowest not-yet-mapped container-level ID,
    # until all of the entries have been used for maps.
    #
    # remap-user = "storage"
    # remap-group = "storage"

    [storage.options.thinpool]
    # Storage Options for thinpool

    # autoextend_percent determines the amount by which pool needs to be
    # grown. This is specified in terms of % of pool size. So a value of 20 means
    # that when threshold is hit, pool will be grown by 20% of existing
    # pool size.
    # autoextend_percent = "20"

    # autoextend_threshold determines the pool extension threshold in terms
    # of percentage of pool size. For example, if threshold is 60, that means when
    # pool is 60% full, threshold has been hit.
    # autoextend_threshold = "80"

    # basesize specifies the size to use when creating the base device, which
    # limits the size of images and containers.
    # basesize = "10G"

    # blocksize specifies a custom blocksize to use for the thin pool.
    # blocksize="64k"

    # directlvm_device specifies a custom block storage device to use for the
    # thin pool. Required if you setup devicemapper
    # directlvm_device = ""

    # directlvm_device_force wipes device even if device already has a filesystem
    # directlvm_device_force = "True"

    # fs specifies the filesystem type to use for the base device.
    # fs="xfs"

    # log_level sets the log level of devicemapper.
    # 0: LogLevelSuppress 0 (Default)
    # 2: LogLevelFatal
    # 3: LogLevelErr
    # 4: LogLevelWarn
    # 5: LogLevelNotice
    # 6: LogLevelInfo
    # 7: LogLevelDebug
    # log_level = "7"

    # min_free_space specifies the min free space percent in a thin pool require for
    # new device creation to succeed. Valid values are from 0% - 99%.
    # Value 0% disables
    # min_free_space = "10%"

    # mkfsarg specifies extra mkfs arguments to be used when creating the base
    # device.
    # mkfsarg = ""

    # mountopt specifies extra mount options used when mounting the thin devices.
    # mountopt = ""

    # use_deferred_removal Marking device for deferred removal
    # use_deferred_removal = "True"

    # use_deferred_deletion Marking device for deferred deletion
    # use_deferred_deletion = "True"

    # xfs_nospace_max_retries specifies the maximum number of retries XFS should
    # attempt to complete IO when ENOSPC (no space) error is returned by
    # underlying storage device.
    # xfs_nospace_max_retries = "0"
    