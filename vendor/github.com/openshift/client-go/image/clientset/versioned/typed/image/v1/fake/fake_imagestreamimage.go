// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	"context"

	v1 "github.com/openshift/api/image/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	testing "k8s.io/client-go/testing"
)

// FakeImageStreamImages implements ImageStreamImageInterface
type FakeImageStreamImages struct {
	Fake *FakeImageV1
	ns   string
}

var imagestreamimagesResource = v1.SchemeGroupVersion.WithResource("imagestreamimages")

var imagestreamimagesKind = v1.SchemeGroupVersion.WithKind("ImageStreamImage")

// Get takes name of the imageStreamImage, and returns the corresponding imageStreamImage object, and an error if there is any.
func (c *FakeImageStreamImages) Get(ctx context.Context, name string, options metav1.GetOptions) (result *v1.ImageStreamImage, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewGetAction(imagestreamimagesResource, c.ns, name), &v1.ImageStreamImage{})

	if obj == nil {
		return nil, err
	}
	return obj.(*v1.ImageStreamImage), err
}
